<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
                         "http://www.docbook.org/xml/4.5/docbookx.dtd">

<chapter id="chap.lxc">
  <title>Linux Containers and Docker</title>
  <indexterm>
    <primary>KIWI</primary>
    <secondary>Container image</secondary>
  </indexterm>
  <indexterm>
    <primary>images</primary>
    <secondary>lxc</secondary>
  </indexterm>
  <indexterm>
    <primary>container</primary>
    <secondary>docker</secondary>
  </indexterm>
  <indexterm>
    <primary>Container image</primary>
    <secondary>lxc image</secondary>
  </indexterm>
  <para><ulink url="http://lxc.sourceforge.net/">
      <citetitle>Linux Containers (LXC)</citetitle></ulink> provide operating
       system-level virtualization, utilizing
      <ulink url="https://www.kernel.org/doc/Documentation/cgroups/cgroups.txt">
        <citetitle>Control Groups (cgroups)</citetitle></ulink>. The
      virtualization is similar to technologies in OpenVZ, Linux-VServer,
      FreeBSD jails, AIX Workload Partitions, and Solaris Containers. The
      network and process space of the container is separated from the
      host resources using namespaces. Kernel space information is mounted
      into the container root filesystem using the <filename>fstab</filename>
      file in the configuration directory. The container root filesystem
      provides the new user space on top of the running kernel of the host.
      A Linux container has two components: the container root file system
      stored in
      <filename class="directory">/var/lib/lxc/<replaceable>CONTAINER_NAME</replaceable></filename>
      and the container configuration stored in
      <filename class="directory">/etc/lxc/<replaceable>CONTAINER_NAME</replaceable></filename>.
      The kiwi created container image is packaged in a tarball containing
      the root filesystem and the configuration. The tarball is expected
      to be inflated at the root level (/) of the target system that
      functions as host.</para>

  <!-- 2014-05-05: See FATE#317064 
       Something for the future: Whenever this FATE will be implemented, 
       we should probably link to some "official" documentation about
       this feature (like the Virtualization Guide). 
       ATM this is not the case yet.
  -->
  <para>Docker is a shipping container system for code that can run virtually
    everywhere. Basically is an extension of LXCâ€™s capabilities. As Docker is 
    based on LXC, a Docker container does not include a separate operating 
    system.
    It relies on the functionality provided by the underlying infrastructure.
    As such, it can package the application and all its dependencies
    in a virtual container which can be run on any Linux server.
  </para>
  
  <para>On top of LXC, Docker makes it possible to deploy portable containers 
    across machines, shift focus on application rather than machines,
    includes versioning capabilities for tracking successive versions
    of a container, allows re-use of containers as a base for other
    specialized components, and much more. Find more information about
    Docker on its homepage at <ulink url="http://www.docker.io"/>.
  </para>

  <para>When building a docker image with kiwi <emphasis>never</emphasis>
    unpack the Docker tarball! If you unpack the tarball it
    will overwrite data on the host system.
    Use the <command>docker</command> command instead.
  </para>

  <sect1 id="sec.lxc.building">
    <title>Building a docker image</title>
    <para>This example is based on SLES version 12</para>

    <screen><command>kiwi</command> --build suse-SLE12-JeOS --add-profile docker --type docker -d /tmp/my-container</screen>
  </sect1>

  <sect1 id="sec.lxc.using">
    <title>Using the Image</title>
    <para>The created container is packaged in a tarball in the destination
      directory, <filename class="directory">my-container</filename>
      and named <filename>LimeJeOS-SLE12-docker.x86_64-1.13.1.tar.xz</filename>
      In order to use this image with docker it must be imported via the
      <command>docker</command> command. The following requires to have
      docker installed and dockerd running.
    </para>

      <screen><command>cd</command> /tmp/my-container
<command>cat</command> LimeJeOS-SLE12-docker.x86_64-1.13.1.tar.xz |\
<command>docker</command> import - sle12-jeos:new</screen>

     <para>Once imported, a container instance can be started as follows:</para>
     <screen><command>docker</command> run --privileged=true -t -i sle12-jeos:new /bin/bash</screen>
  </sect1>

  <sect1 id="sec.lxc.details">
    <title>Image Configuration Details</title>
    <para>The configuration for a container does not need to contain a kernel
      package. The container represents the user space that runs on top
      of the kernel of the container host system.</para>
    <para>The container itself must contain the Linux user space container
      tools.
    </para>
    <para>Configure the network configuration for the container using the
      <sgmltag class="element">vmnic</sgmltag> element.
      The  <sgmltag class="attribute">mode</sgmltag>
      attribute indicates the network mode, <emphasis>veth</emphasis>
      by default. While it is possible to configure multiple network
      interfaces in the <filename>config.xml</filename> file, the written
      container configuration will only reflect the information configured
      for the first <sgmltag class="element">vmnic</sgmltag>
      element found in the <filename>config.xml</filename> file. The
      configuration for the container expects that the host has a configured
      network bridge with the name <emphasis>br0</emphasis>.
      For complex network setup implementations it is necessary to edit the
      config file.
    </para>
    <para>The generated configuration file restricts the device access
      of the container according to a generally accepted best practice
      security  model. The device access permissions may be modified by
      editing the <filename>config</filename> file for the container.</para>
  </sect1>
</chapter>
