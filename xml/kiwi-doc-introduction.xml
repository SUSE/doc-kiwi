<!-- Converted by suse-upgrade version 1.1 -->

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="chap.introduction"><title>Introduction</title><info/>
 
 <section xml:id="sec.introduction.whatiskiwi">
  <title>What is KIWI?</title>

  <para>
   KIWI is a command line tool, written in Perl, for building images for Linux.
   It supports a variety of image formats. KIWI is used as a back-end for the
   appliance builder <link xlink:href="http://susestudio.com/">SUSE Studio</link>.
   It is also used to build images in the <link xlink:href="http://build.opensuse.org/">openSUSE Build Service</link>, among them
   images for all SUSE products.
  </para>

  <para>
   Images for Linux are available in many different formats. A Linux <filename class="extension">*.iso</filename> file, that can be burned to an optical
   medium to install Linux, is an image. A file used by virtualization systems
   such as KVM, Xen, or VMware is an image. The installation of a Linux system
   on your hard drive can be turned into an image using the
   <command>dd</command> command.
  </para>
  <para>
   Basically, an image is a Linux system in a file. Depending on the type of
   the image, there are different use cases for it. It can be used to burn an
   iso image to an optical medium with which the computer can be booted. An
   image can also be used to run a Virtual Machine from the
   <filename class="extension">*.iso</filename> file (image) stored on your
   hard drive. KIWI supports the following image types and formats:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     ISO
    </para>
   </listitem>
   <listitem>
    <para>
     Live CD/DVD
    </para>
   </listitem>
   <listitem>
    <para>
     PXEBoot
    </para>
   </listitem>
   <listitem>
    <para>
     Hard Disk
    </para>
   </listitem>
   <listitem>
    <para>
     USB
    </para>
   </listitem>
   <listitem>
    <para>
     Amazon EC2 (<filename class="extension">.ami</filename>)
    </para>
   </listitem>
   <listitem>
    <para>
     Docker
    </para>
   </listitem>
   <listitem>
    <para>
     Google Cloud Format (<filename class="extension">..gce</filename>)
    </para>
   </listitem>
   <listitem>
    <para>
     KVM/Qemu (<filename class="extension">.qcow2</filename>)
    </para>
   </listitem>
   <listitem>
    <para>
     Open Virtualization Format (<filename class="extension">.ovf</filename>, <filename class="extension">.ova</filename>)
    </para>
   </listitem>
   <listitem>
    <para>
     Vagrant (<filename class="extension">.vagrant</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     VirtualBox (<filename class="extension">.vdi</filename>)
    </para>
   </listitem>
   <listitem>
    <para>
     Virtual Hard Disk (<filename class="extension">.vhd</filename>)
    </para>
   </listitem>
   <listitem>
    <para>
     VMware (<filename class="extension">.vmdk</filename>)
    </para>
   </listitem>
   <listitem>
    <para>
     XEN
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section xml:id="sec.introduction.whatdoeskiwido">
  <title>What does KIWI do?</title>
  <para>
   KIWI allows you to configure, build, and deploy your own operating system
   images in a variety of formats. The KIWI workflow is divided into two
   distinct stages. For a detailed description of this process refer to <xref linkend="chap.workflow"/>.
  </para>
  <procedure>
   <step>
    <formalpara>
     <title>Preparation</title>
     <para>
      Create a root directory holding the contents of the new file
      system. Install the required packages from a software package source
      such as the installation media for SUSE Linux Enterprise Server, or
      an online repository. Create an image description file,
      (<filename>config.xml</filename>) and optionally apply
      customizations. This operation results in the <quote>unpacked root
      tree</quote>.
     </para>
    </formalpara>
   </step>
   <step>
    <formalpara>
     <title>Creation</title>
     <para>
      The image itself is created using the unpacked root tree created in the
      previous step. The image creation process does not require user
      interaction, but can be fine-tuned by modifying the <filename>images.sh</filename>
      script that is called during the creation process.
     </para>
    </formalpara>
   </step>
  </procedure>  
 </section>
 
 <section xml:id="sec.introduction.howtousekiwi">
  <title>How to use KIWI?</title>

  <para>
   KIWI is a command line tool that is invoked with the
   <command>kiwi</command> command in your shell. KIWI needs to be executed
   as the <systemitem class="username">root</systemitem> user, as
   administrative privileges are required for many operations that need to
   take place to create an image. Therefore, when using KIWI you need to be
   aware of what you are doing and a certain amount of caution is in order.
   Running KIWI on your system is not inherently dangerous to your system,
   just keep in mind that you are running as the
   <systemitem class="username">root</systemitem> user.
  </para>

  <para>
   The two phases of the image creation process outlined in <xref linkend="sec.introduction.whatdoeskiwido"/> can be started with the
   commands <command>kiwi --prepare</command> for the first step and
   <command>kiwi --create</command> for the second step. For convenience KIWI
   also has the <option>--build</option> that combines the
   <emphasis>prepare</emphasis> and <emphasis>create</emphasis> steps.
  </para>
 </section>
</chapter>
