<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
                         "http://www.docbook.org/xml/4.5/docbookx.dtd">

<chapter id="chap.iso">
  <title>ISO Image—Live Systems</title>
  <para>A live system image is an operating System on CD or DVD. In
    principal one can treat the CD/DVD as the hard disk of the system
    with the restriction that you can’t write data on it. So as soon as
    the media is plugged into the computer, the machine is able to boot
    from that media. After some time one can login to the system and
    work with it like on any other system. All write actions takes place
    in RAM space and therefore all changes will be lost as soon as the
    computer shuts down. </para>

  <sect1>
    <title>Building the suse-live-iso Example</title>

    <para>The latest example provided with KIWI is based on openSUSE
      11.2 and includes the base and KDE patterns. </para>

    <screen><command>cd</command> /usr/share/doc/packages/kiwi/examples cd suse-11.2
<command>kiwi</command> –prepare ./suse-live-iso –root /tmp/myiso </screen>

    <screen><command>kiwi</command> –create /tmp/myiso –type iso -d /tmp/myiso-result</screen>
  </sect1>

  <sect1>
    <title>Using the Image</title>
    <para>There are two ways to use the generated ISO image: </para>

    <itemizedlist>
      <listitem>
        <para>Burn the <filename class="extension">.iso</filename> file
          on a CD or DVD with your preferred burn program. Plug in the
          CD or DVD into a test computer and (re)boot the machine. Make
          sure the computer boot from the CD drive as first boot device.
        </para>
      </listitem>
      <listitem>
        <para>Use a virtualisation system to test the image directly.
          Testing an iso can be done with any full virtual system for
          example: </para>

        <screen><command>cd</command> /tmp/myiso-result
<command>qemu</command> -cdrom ./suse-11.2-live-iso.i686-2.5.1.iso -m 256 </screen>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1>
    <title>Flavours</title>
    <para>KIWI supports different filesystems and boot methods along
      with the ISO image type. The provided example by default uses a
        <systemitem class="filesystem">squashfs</systemitem> compressed
      root filesystem. By design of this filesystem it is not possible
      to write data on it. To be able to write on the filesystem another
      filesystem called aufs is used. <systemitem class="filesystem"
        >aufs</systemitem> is an overlay filesystem which allows to
      combine two different filesystems into one. In case of a live
      system <systemitem class="filesystem">aufs</systemitem> is used to
      combine the squashfs compressed read only root tree with a tmpfs
      RAM filesystem. The result is a full writable root tree whereas
      all written data lives in RAM and is therefore not persistent.
        <systemitem class="filesystem">squashfs</systemitem> and/or
        <systemitem class="filesystem">aufs</systemitem> does not exist
      on all versions of SUSE and therefore the flags attribute in
        <filename>config.xml</filename> exists to be able to have the
      following alternative solutions: </para>


    <variablelist>
      <varlistentry>
        <term><sgmltag class="attribute">flags</sgmltag>="<sgmltag
            class="attvalue">unified</sgmltag>"</term>
        <listitem>
          <para>Compressed and unified root tree as explained above.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><sgmltag class="attribute">flags</sgmltag>="<sgmltag
            class="attvalue">compressed</sgmltag>"</term>
        <listitem>
          <para> Does filesystem compression with squashfs, but don’t
            use an overlay filesystem for write support. A symbolic link
            list is used instead and thus a split element is required in
              <filename>config.xml</filename>. See the split mode
            section below for details. </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><sgmltag class="attribute">flags</sgmltag>="<sgmltag
            class="attvalue">clic</sgmltag>"</term>
        <listitem>
          <para> Creates a FUSE based <systemitem class="filesystem"
              >clicfs</systemitem> image and allows write operations
            into a cow file. In case of an ISO the write happens into a
            ramdisk. </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Flags Not Set</term>
        <listitem>
          <para>If no <sgmltag class="attribute">flags</sgmltag>
            attribute is set no compressed filesystem, no overlay
            filesystem will be used. The root tree will be directly part
            of the ISO filesystem and the paths:
              <filename>/bin</filename>, <filename>/boot</filename>,
              <filename>/lib</filename>, <filename>/lib64</filename>,
              <filename>/opt</filename>, <filename>/sbin</filename>, and
              <filename>/usr</filename> will be read-only. </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <sect2>
      <title>Split mode</title>
      <para>If no overlay filesystem is in use but the image filesystem
        is based on a compressed filesystem KIWI allows to setup which
        files and directories should be writable in a so called split
        section. In order to allow to login into the system, at least
        the <filename class="directory">/var</filename> directory should
        be writable. This is because the PAM authentification requires
        to be able to report any login attempt to
          <filename>/var/log/messages</filename> which therefore needs
        to be writable. The following split section can be used if the
        flag compressed is used: </para>

      <screen>&lt;split&gt; 
  &lt;temporary&gt; 
   &lt;file name="/var"/&gt;
   &lt;file name="/var/*"/&gt; 
   &lt;file name="/boot"/&gt; 
   &lt;file name="/boot/*"/&gt; 
   &lt;file name="/etc"/&gt; 
   &lt;file name="/etc/*"/&gt; 
   &lt;file name="/home"/&gt; 
   &lt;file name="/home/*"/&gt; 
  &lt;/temporary&gt; 
&lt;/split&gt;</screen>
    </sect2>
  </sect1>
</chapter>
